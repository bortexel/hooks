import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    api project(':hooks-api')
    api project(':distributions:common')
    minecraft 'com.mojang:minecraft:1.19'
    mappings 'net.fabricmc:yarn:1.19+build.4:v2'
    modImplementation 'net.fabricmc:fabric-loader:0.14.6'
    modImplementation 'net.fabricmc.fabric-api:fabric-api:0.56.1+1.19'
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release.set(17)
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
    archivesBaseName = project.name
    withSourcesJar()
}

shadowJar {
    archiveClassifier.set('all-dev')

    dependencies {
        include(dependency(':hooks-api'))
        include(dependency(':common'))
        include(dependency('ru.bortexel:bortexel4j'))
        include(dependency('com.squareup.okhttp3:okhttp'))
        include(dependency('com.squareup.okio:okio'))
    }
}

task remapShadowJar(type: RemapJarTask, dependsOn: shadowJar) {
    inputFile.set(shadowJar.archiveFile)
    archiveFileName = shadowJar.archiveFileName.get().replaceAll("-dev\\.jar\$", ".jar")
    addNestedDependencies.set(true)
}

assemble.dependsOn(remapShadowJar)
